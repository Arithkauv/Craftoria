{
	"credit": "Created by FreshLX for Fresh_Animations",
	"textureSize": [64, 64],
	"texture": "textures/entity/piglin/piglin.png",
	"models": [
		{
			"part": "head",
			"id": "head",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"submodels": [
				{
					"id": "Created_by_FreshLX_for_Fresh_Animations",
					"invertAxis": "xy",
					"translate": [0, 0, 0]
				}
			],
			"animations": [
				{
					"var.crossbow": "                                                                         if(equals(left_sleeve.ry -torad(40), right_sleeve.ry +torad(40), torad(30)), 1, 0 )",
					"var.melee_r": "if(jacket.ry==0 && var.crossbow!=1 && ((right_sleeve.rx-sin(swing_progress*pi)*1.8) -if(right_sleeve.rx>torad(80),  left_pants.rx/1.4, 0))<torad(-80), 1, 0 )",
					"var.melee_l": "if(jacket.ry==0 && var.crossbow!=1 && (( left_sleeve.rx-sin(swing_progress*pi)*1.8) -if( left_sleeve.rx>torad(80), right_pants.rx/1.4, 0))<torad(-80), 1, 0 )",
					"var.inspect_r": "                                                                  if(var.crossbow!=1 && head.rx-torad(head_pitch)!=0 && right_sleeve.ry<=torad(-20), 1, 0 )",
					"var.inspect_l": "                                                                  if(var.crossbow!=1 && head.rx-torad(head_pitch)!=0 &&  left_sleeve.ry>=torad( 20), 1, 0 )",
					"var.dance": "                                                                                          if( left_sleeve.rz<=torad(-45) && right_sleeve.rz>=torad( 45), 1, 0 )",
					"var.r": "random(id)*pi*4",
					"var.ls": "limb_swing/if(is_child, 2.4, 1.6)",
					"var.b": "var.r +age/if(is_child, 6, 10)"
				},
				{
					"head.rx": "if(var.inspect_r==1||var.inspect_l==1, torad(25), torad(head_pitch) +clamp(torad(head_yaw)/4, 0, torad(20)) +clamp(-torad(head_yaw)/4, 0, torad(20)) ) -sin(pi*2*swing_progress)/5*if(var.melee_r==1||var.melee_l==1, 1, 0.5) +cos(time/7*pi*2)/4*var.dance +(sin(limb_swing/2)/4 +torad(20))*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"head.ry": "if(var.inspect_l==1, torad(-20), 0)         +if(var.melee_l==1,      -sin(pi*swing_progress)/6, sin(pi*swing_progress)/6) +if(var.inspect_r==1||var.inspect_l==1, sin(var.r+age/10 +sin(torad(45)+var.r+age/5)/2)/8*if(var.inspect_r==1, -1, 1), clamp(torad(head_yaw)/1.2, -pi/2     , pi/2     ) ) -sin(time/7*pi)/2*var.dance",
					"head.rz": "                                             if(var.melee_l==1,      -sin(pi*swing_progress)/6, sin(pi*swing_progress)/6) +if(var.inspect_r==1||var.inspect_l==1, sin(var.r+age/10 +sin(torad(45)+var.r+age/5)/2)/8*if(var.inspect_r==1, -1, 1), clamp(torad(head_yaw)/4  , -torad(20), torad(20)) ) +sin(time/7*pi)/3*var.dance +cos(limb_swing/3)/3*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"head.tx": "if(var.melee_r==1, 0.5 +sin(pi*swing_progress), var.melee_l==1, -0.5 -sin(pi*swing_progress)  , sin(pi*swing_progress)  ) +sin(var.ls) *limb_speed/1.2 -cos(time/7*pi)*2*var.dance",
					"head.ty": " 0.5 +sin(var.b)/3 +sin(pi*swing_progress)*2*if(var.melee_r==1||var.melee_l==1, 1, 0.5) +(-sin(torad(90)+var.ls*2)/1.5*clamp(limb_speed*2, 0, 1))*clamp(sin(limb_speed*pi*1.5), 0, if(is_child, 0, 1)) +(sin(torad(135)+var.ls*2 -cos(torad(135)+var.ls*2)/3))*1.3*clamp(if(is_child, limb_speed*1.5, -cos(limb_speed*pi)), 0, 1) +(0.3 +cos(time/7*pi*2) )*var.dance",
					"head.tz": "-0.5 +clamp(-0.5+limb_speed*3, -0.5, 0.3) -2.7*if(is_child, limb_speed, clamp(-1+limb_speed*2, 0, 1)) -torad(head_pitch) -sin(var.b)/3 -sin(pi*swing_progress)*if(var.melee_r==1||var.melee_l==1, 4, 2) +if(var.melee_r==1||var.melee_l==1, 2, 0) +if(var.inspect_r==1||var.inspect_l==1, 2.5, 0) +if(is_child, 1, 1*var.dance) +(sin(limb_swing/2) +2)*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"headwear.rx": "head.rx",
					"headwear.ry": "head.ry",
					"headwear.rz": "head.rz",
					"headwear.tx": "head.tx *if(is_child, 1.5, 1)",
					"headwear.ty": "head.ty *if(is_child, 1.5, 1)",
					"headwear.tz": "head.tz *if(is_child, 1.5, 1)",
					"headwear.sx": "if(is_child, 1.5, 1)",
					"headwear.sy": "headwear.sx",
					"headwear.sz": "headwear.sx",
					"body.rx": "torad(5) +sin(var.b)/30 +torad(15)*if(is_child, limb_speed, clamp(-1+limb_speed*2, 0, 1)) +torad(head_pitch)/10                       +if(var.melee_r==1||var.melee_l==1, torad(-10)                            +sin(pi*swing_progress)/2,  sin(pi*swing_progress)/3*if(var.melee_r==1||var.melee_l==1, 1, 0.5)) +if(var.inspect_r==1||var.inspect_l==1, torad(-13), 0) -torad(10)*if(is_child, 1, var.dance) -(sin(limb_swing/2)/2 +torad(20))/3*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"body.ry": "         if(var.melee_r==1||var.melee_l==1||is_riding, 0, clamp(torad(-15 )+limb_speed, torad(-15 ), 0)*if(is_child, 0, 1-var.dance)) +if(var.melee_r==1, torad(30)            -sin(pi*swing_progress)  ,var.melee_l==1, torad(-20)                            +sin(pi*swing_progress)  , -sin(pi*swing_progress)/3*if(var.melee_r==1||var.melee_l==1, 1, 0.5)) -sin(var.ls)/2 *limb_speed/1.2 +clamp(torad(head_yaw)/6, -torad(15), torad(15)) +sin(time/7*pi)/4*var.dance",
					"body.rz": "head.rz +if(var.melee_r==1||var.melee_l==1||is_riding, 0, clamp(torad(-1.5)+limb_speed, torad(-1.5), 0)*if(is_child, 0, 1-var.dance)) +if(var.melee_r==1, torad( 5)*limb_speed -sin(pi*swing_progress)/9,var.melee_l==1, torad(-5)*limb_speed +sin(pi*swing_progress)/9, -sin(pi*swing_progress)/6*if(var.melee_r==1||var.melee_l==1, 1, 0.5)) +sin(var.ls)/10*limb_speed/1.2*if(var.melee_r==1||var.melee_l==1, 0, var.inspect_r==1||var.inspect_l==1||var.dance==1, 1, clamp(2-limb_speed*2, -1, 1)) +if(var.inspect_r==1||var.inspect_l==1, -sin(var.r+age/10 +sin(torad(45)+var.r+age/5)/2)/8*if(var.inspect_r==1, -1, 1), clamp(-torad(head_yaw)/4, -torad(20), torad(20))) +( -sin(time/7*pi)/3 -cos(time/7*pi)/6 )*var.dance -cos(limb_swing/3)/3*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"body.tx": "head.tx +cos(time/7*pi)*var.dance",
					"body.ty": "head.ty -0.1 +(-(sin(torad(135)+var.ls*2 -cos(torad(135)+var.ls*2)/3)) +sin(torad(160)+var.ls*2 -cos(torad(160)+var.ls*2)/3) )*clamp(if(is_child, limb_speed*1.5, -cos(limb_speed*pi)), 0, 1)",
					"body.tz": "head.tz +0.5"
				},
				{
					"right_arm.rx": "if(var.crossbow==1, right_arm.rx +cos(torad(-45)+var.ls*2)/10 *limb_speed +torad(-8), torad(15)*limb_speed +if(var.melee_r==1||var.melee_l==1, (sin(pi*swing_progress)*if(var.melee_r==1, 2, 1)), clamp(torad(-20)+if(var.inspect_r==1||var.inspect_l==1, 0, limb_speed), torad(-20), 0)*if(is_child, 0, 1-var.dance) -sin(pi*swing_progress*2)                                       ) +if(var.melee_r==1, torad(-120) +torad(-25)*limb_speed +clamp(-torad(head_yaw)/2,  -torad(45), torad(45)) -sin(var.ls)/if(is_child, 1, if(limb_speed>=0.6, 4, 1))*limb_speed/1.2, if(is_riding, if(var.melee_l==1, torad(-45), 0), -sin(torad(30)+var.ls)/if(is_child, 1, 1.4)*limb_speed/if(var.inspect_r==1, 3*-1, 1  ) )) +if(var.inspect_r==1, torad(-30), var.inspect_l==1, torad(30), clamp( torad(head_yaw)/8, -torad(10), torad(10)) ) ) +( torad(-20) -sin(time/7*pi)/3 )*var.dance +(-sin(limb_swing/2)/4 -torad(20) )*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"left_arm.rx": " if(var.crossbow==1,  left_arm.rx +cos(torad(-45)+var.ls*2)/10 *limb_speed           , torad(15)*limb_speed +if(var.melee_r==1||var.melee_l==1, (sin(pi*swing_progress)*if(var.melee_r==1, 1, 2)), clamp(torad( 10)-if(var.inspect_r==1||var.inspect_l==1, 0, limb_speed), 0, torad( 10))*if(is_child, 0, 1-var.dance) +sin(pi*swing_progress)/if(var.melee_r==1||var.melee_l==1, 1, 3)) +if(var.melee_l==1, torad(-120) +torad(-25)*limb_speed +clamp(-torad(head_yaw)/2,  -torad(45), torad(45)) +sin(var.ls)/if(is_child, 1, if(limb_speed>=0.6, 4, 1))*limb_speed/1.2, if(is_riding, if(var.melee_l==1, 0, torad(-45)),  sin(torad(30)+var.ls)/if(is_child, 1, 1.4)*limb_speed/if(var.inspect_l==1, 3*-1, 1  ) )) +if(var.inspect_l==1, torad(-60),                              clamp(-torad(head_yaw)/8, -torad(10), torad(10)) ) ) +( torad(-20) +sin(time/7*pi)/3 )*var.dance +( sin(limb_swing/2)/4 -torad(20) )*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"right_arm.ry": "if(var.crossbow==1, right_arm.ry                                                                                    +torad(-3),                       if(var.melee_r==1||var.melee_l==1, 0,                                                    clamp(torad(-30)+if(var.inspect_r==1||var.inspect_l==1, 0, limb_speed), torad(-30), 0)*if(is_child, 0, 1-var.dance) +torad(40)*sin(pi*swing_progress)                     ) +if(var.melee_r==1, torad( 10 ) +torad( 25)*limb_speed +clamp( torad(head_yaw)/1.5, -torad(60), torad(60)), if(var.melee_l==1, torad(-30),                                                                 if(is_riding, if(var.melee_l==1, 0, torad( 30)), 0)) +(-sin(    var.ls)/4 +torad(-15) )     *limb_speed/if(var.inspect_r==1, 3.5 , 1.2) )  +if(var.inspect_r==1, torad(-8 ),var.inspect_l==1, clamp(torad(30)-limb_speed*3, 0, torad(30)), 0) +sin(var.b+torad(90))/16 -sin(pi/2*swing_progress*2)/2*if(var.melee_r==1, clamp(limb_speed*2, 1, 2), -1) ) +clamp(torad( 20)-limb_speed, 0, torad( 20))*if(is_child, 1, var.dance)",
					"left_arm.ry": " if(var.crossbow==1,  left_arm.ry                                                                                    +torad( 3),                       if(var.melee_r==1||var.melee_l==1, 0,                                                    clamp(torad( 10)-if(var.inspect_r==1||var.inspect_l==1, 0, limb_speed), 0, torad( 10))*if(is_child, 0, 1-var.dance)                                                       ) +if(var.melee_l==1, torad(-10 ) +torad(-25)*limb_speed +clamp( torad(head_yaw)/1.5, -torad(60), torad(60)), if(var.melee_r==1, torad( 30),                                                                 if(is_riding, if(var.melee_l==1, torad( 30), 0), 0)) +(-sin(    var.ls)/4 +torad( 15) )     *limb_speed/if(var.inspect_l==1, 3.5 , 1.2) )  +if(var.inspect_l==1, torad( 8 ),                                                               0) +sin(var.b-torad(90))/16 +sin(pi/2*swing_progress*2)/2*if(var.melee_r==1, -1, clamp(limb_speed*2, 1, 2)) ) +clamp(torad(-20)+limb_speed, torad(-20), 0)*if(is_child, 1, var.dance)",
					"right_arm.rz": "if(var.crossbow==1, right_arm.rz, torad( 10) -torad(head_pitch)/14 +if(var.melee_r==1, torad(-30), -sin(var.ls)/5*limb_speed/if(var.inspect_r==1, 3.5, 1.2)) +if(var.melee_l==1, -sin(pi*swing_progress  )/2, sin(pi*swing_progress)/4                                       ) ) +if(var.inspect_r==1, -sin(var.r+age/10 -cos((age/1.5+limb_swing)/5)/2)/3, 0 ) +if(var.dance==1, torad( 80) -0.8*limb_speed, 0) +sin(time/7*pi +cos(time/7*pi)/2)/2*var.dance -(sin(limb_swing/2)/2 -pi/2)/6*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"left_arm.rz": " if(var.crossbow==1,  left_arm.rz, torad(-10) +torad(head_pitch)/14 +if(var.melee_l==1, torad( 30), -sin(var.ls)/5*limb_speed/if(var.inspect_l==1, 3.5, 1.2)) +if(var.melee_l==1, -sin(pi*swing_progress*2)/4,-sin(pi*swing_progress)/if(var.melee_r==1||var.melee_l==1, 2, 4)) ) +if(var.inspect_l==1,  sin(var.r+age/10 -cos((age/1.5+limb_swing)/5)/2)/3, 0 ) +if(var.dance==1, torad(-80) +0.8*limb_speed, 0) +sin(time/7*pi -cos(time/7*pi)/2)/2*var.dance +(sin(limb_swing/2)/2 -pi/2)/6*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"right_arm.tx": "-5 +body.tx +if(var.crossbow==1, 0.3 +clamp(-head_yaw/10,  0, 2), if(var.melee_r==1, -1, var.melee_l==1, sin(var.ls)*limb_speed*1.2 +limb_speed  , 0) +sin(pi*swing_progress)*if(var.melee_r==1, 2, 0) ) +if(var.inspect_r==1, clamp(0.8-limb_speed*2, 0, 0.8),var.inspect_l==1,                               0, 0) -1*var.dance",
					"left_arm.tx": "  5 +body.tx +if(var.crossbow==1, 0.3 +clamp(-head_yaw/10, -2, 0), if(var.melee_l==1,  1, var.melee_r==1, sin(var.ls)*limb_speed*2 -limb_speed*1.5, 0) -sin(pi*swing_progress)*if(var.melee_l==1, 2, 0) ) +if(var.inspect_r==1, clamp(0.5-limb_speed*2, 0, 0.5),var.inspect_l==1, clamp( 1 -limb_speed*4, 0,  1 ), 0) +1*var.dance",
					"right_arm.ty": "2.2 +body.ty +sin(var.b-torad(60))/4 +if(var.melee_r==1, -1 -1*limb_speed, 0) +if(var.melee_r==1||var.melee_l==1, sin(pi*swing_progress), 0) +if(var.inspect_r==1, 1, 0) -sin(time/7*pi)*2*var.dance",
					"left_arm.ty": " 2.2 +body.ty +sin(var.b-torad(60))/4 +if(var.melee_l==1, -1 -1*limb_speed, 0) +if(var.melee_r==1||var.melee_l==1, sin(pi*swing_progress), 0) +if(var.inspect_l==1, 1, 0) +sin(time/7*pi)*2*var.dance",
					"right_arm.tz": "-2*if(is_child, limb_speed, clamp(-1+limb_speed*2, 0, 1)) -torad(head_pitch) -sin(var.ls)*4*limb_speed/1.2 -sin(var.b)/4 +clamp( torad(head_yaw), -3, 3) +if(var.crossbow==1, -1 +clamp( head_yaw/15, -1, 0), if(var.melee_r==1,  2 -sin(pi*swing_progress)*6,var.melee_l==1, limb_speed*2 +sin(pi*swing_progress)*3, clamp(-2+limb_speed*8, -2, 0)*if(is_child, 0, 1-var.dance) -sin(pi*swing_progress)*2)                                                          ) +if(var.inspect_l==1, 3, 0) +( 0.5 +sin(time/7*pi) )*var.dance +(sin(limb_swing/2) +2)*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"left_arm.tz": " -2*if(is_child, limb_speed, clamp(-1+limb_speed*2, 0, 1)) -torad(head_pitch) +sin(var.ls)*4*limb_speed/1.2 -sin(var.b)/4 +clamp(-torad(head_yaw), -3, 3) +if(var.crossbow==1, -1 +clamp(-head_yaw/15, -1, 0),+if(var.melee_r==1, -1 +sin(pi*swing_progress)*3,var.melee_l==1, 1.5          -sin(pi*swing_progress)*6, clamp( 1-limb_speed*2,  0, 1)*if(is_child, 0, 1-var.dance) +sin(pi*swing_progress)*2) +if(!(var.melee_r==1||var.melee_l==1)&&is_riding, -3, 0) ) +if(var.inspect_r==1, 2, 0) +( 0.5 -sin(time/7*pi) )*var.dance +(sin(limb_swing/2) +2)*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)"
				},
				{
					"right_leg.rx": "torad(10)*       limb_speed            +if(is_riding, torad(-80), clamp(torad(- 5)+limb_speed  , torad(- 5), 0)*(1-var.dance) +(torad(2)+sin(torad( 20)+var.b)/42) +( sin(var.ls) )/if(is_child, 1, if(limb_speed>=0.6, 1.5, 0.8))*limb_speed) +clamp(-torad(head_yaw)/30, -torad(5), torad(5)) +if(var.melee_l==1, -sin(pi*swing_progress)/5, -sin(pi*swing_progress)/5*if(var.melee_r==1||var.melee_l==1, 1, 0)) +(-sin(time/7*pi)/15 +torad(8) )*var.dance",
					"left_leg.rx": " torad(10)*       limb_speed            +if(is_riding, torad(-80), clamp(torad(  5)-limb_speed  , 0, torad(  5))*(1-var.dance) +(torad(2)+sin(torad(-20)+var.b)/35) +(-sin(var.ls) )/if(is_child, 1, if(limb_speed>=0.6, 1.5, 0.8))*limb_speed) +clamp( torad(head_yaw)/30, -torad(5), torad(5)) +if(var.melee_l==1, -sin(pi*swing_progress)/5, -sin(pi*swing_progress)/5*if(var.melee_r==1||var.melee_l==1, 1, 0)) +( sin(time/7*pi)/15 +torad(8) )*var.dance",
					"right_leg.ry": "torad( 5)*clamp( limb_speed*1.5, 0, 1) +if(is_riding, torad( 20), clamp(torad( 15)-limb_speed  , 0, torad( 15))*if(is_child, 1  , 0          )) +if(var.melee_r==1, torad( 20)*limb_speed, 0) +clamp(-sin(var.ls)/4*clamp(if(is_child, limb_speed*1.5, -cos(limb_speed*pi)), 0, 1), torad(-10), 0) +clamp(torad( 10)-limb_speed*2, 0, torad( 10))*var.dance",
					"left_leg.ry": " torad(-5)*clamp( limb_speed*1.5, 0, 1) +if(is_riding, torad(-20), clamp(torad(-30)+limb_speed*2, torad(-30), 0)*if(is_child, 0.5, 1-var.dance)) +if(var.melee_l==1, torad(-20)*limb_speed, 0) +clamp(-sin(var.ls)/4*clamp(if(is_child, limb_speed*1.5, -cos(limb_speed*pi)), 0, 1), 0, torad( 10)) +clamp(torad(-10)+limb_speed*2, torad(-10), 0)*var.dance",
					"right_leg.rz": "                                        if(is_riding, 0         , clamp(torad(2.5)-limb_speed  , 0, torad(2.5))*(1-var.dance) +torad( 3)) +sin(var.ls)/8*limb_speed/1.2 +if(var.melee_r==1, -sin(pi*swing_progress)/8  +sin(var.ls)/3*limb_speed +torad(10)*limb_speed, var.melee_l==1, sin(pi*swing_progress)/8                            +torad( 3)*limb_speed, 0) +if(var.melee_r==1||var.melee_l==1, -sin(var.ls)/8*limb_speed, 0) +( cos(time/7*pi)/12 )*var.dance",
					"left_leg.rz": "                                         if(is_riding, 0         , clamp(torad(- 5)+limb_speed  , torad(- 5), 0)*(1-var.dance) +torad(-3)) +sin(var.ls)/8*limb_speed/1.2 +if(var.melee_r==1, torad(-3)*limb_speed                                                      , var.melee_l==1, sin(pi*swing_progress)/8 +sin(var.ls)/3*limb_speed +torad(-10)*limb_speed, 0) +if(var.melee_r==1||var.melee_l==1, -sin(var.ls)/8*limb_speed, 0) +( cos(time/7*pi)/12 )*var.dance",
					"right_leg.tx": "-2 +clamp(-0.25+limb_speed,-0.25, 0) +if(is_riding, 0, if(var.melee_l==1, sin(pi*swing_progress), -sin(pi*swing_progress)*if(var.melee_r==1||var.melee_l==1, 1, 0))                                                      ) +cos(time/7*pi)*var.dance",
					"left_leg.tx": "  2 +clamp( 0.25-limb_speed, 0, 0.25) +if(is_riding, 0, if(var.melee_l==1, sin(pi*swing_progress), -sin(pi*swing_progress)*if(var.melee_r==1||var.melee_l==1, 1, 0)) +sin(torad(-20)+var.b)/6*if(is_child, 0, 1-var.dance)) +cos(time/7*pi)*var.dance",
					"right_leg.ty": " 0.1 +clamp(12 +cos(if(limb_speed>=0.6, torad(-30), 0)+var.ls)*2*clamp(limb_speed*2, 0, 2) +clamp(-1+limb_speed*1.5, 0, 1) , 0, 12.2) +if(is_riding, -1, 0) +clamp( (-sin(var.ls) +body.ty)*clamp(if(is_child, limb_speed*1.5, -cos(limb_speed*pi)), 0, 1), -4, 0)",
					"left_leg.ty": "  0.1 +clamp(12 -cos(if(limb_speed>=0.6, torad(-30), 0)+var.ls)*2*clamp(limb_speed*2, 0, 2) +clamp(-1+limb_speed*1.5, 0, 1) , 0, 12.2) +if(is_riding, -1, 0) +clamp( ( sin(var.ls) +body.ty)*clamp(if(is_child, limb_speed*1.5, -cos(limb_speed*pi)), 0, 1), -4, 0)",
					"right_leg.tz": "-0.1 +clamp( 3 +cos(                                   var.ls)*6*clamp(limb_speed*2, 0, 1), -6, 1)*1.2 +if(is_riding, -2, sin(pi*swing_progress)*if(var.melee_r==1||var.melee_l==1, 2, 0) +clamp( torad(head_yaw)/2, -pi/4, pi/4) -sin(torad( 20)+var.b)/4) +if(is_riding, 0, var.melee_r==1, clamp(-1+limb_speed*4, -1, 0),var.melee_l==1, clamp(-2+limb_speed*4, -2, 0), clamp(-1.5+limb_speed*6, -1.5, 0)*if(is_child, 0, 1-var.dance)) +clamp(-2+limb_speed*4, -2, 0)*if(is_child, 1, var.dance) +sin(time/7*pi)*0.8*var.dance",
					"left_leg.tz": " -0.1 +clamp( 3 -cos(                                   var.ls)*6*clamp(limb_speed*2, 0, 1), -6, 1)*1.2 +if(is_riding, -2, sin(pi*swing_progress)*if(var.melee_r==1||var.melee_l==1, 2, 0) +clamp(-torad(head_yaw)/2, -pi/4, pi/4) -sin(torad(-20)+var.b)/4) +if(is_riding, 0, var.melee_r==1, clamp(-1+limb_speed*4, -1, 0),var.melee_l==1,                            0 , clamp(-0.5+limb_speed*2, -0.5, 0)*if(is_child, 0, 1-var.dance)) +clamp(-2+limb_speed*4, -2, 0)*if(is_child, 1, var.dance) -sin(time/7*pi)*0.8*var.dance"
				},
				{
					"nose.ty": "-2 +cos(var.r+age)/10 *clamp(-1.5 +sin(var.r+age/10)*4 -cos(var.r+age/23)*4, 0, 1)",
					"nose.rx": "    sin(var.r+age)/12 *clamp(-1.5 +sin(var.r+age/10)*4 -cos(var.r+age/23)*4, 0, 1)",
					"right_ear2.rx": "-torad(5) +torad(20)*clamp(limb_speed, 0, 1) +if(var.inspect_r==1||var.inspect_l==1, torad(-10), -torad(head_pitch)/3) +sin(pi*swing_progress*2)/2*if(var.melee_r==1||var.melee_l==1, 1, 0.3) +cos(torad(45)+time/7*pi)/2*var.dance +clamp( if(!is_riding&&age>10, -(head.ry-var.y) -(rot_y-var.z), 0), -pi/4, pi/4)",
					"left_ear2.rx": " -torad(5) +torad(20)*clamp(limb_speed, 0, 1) +if(var.inspect_r==1||var.inspect_l==1, torad(-10), -torad(head_pitch)/3) +sin(pi*swing_progress*2)/2*if(var.melee_r==1||var.melee_l==1, 1, 0.3) -cos(torad(45)+time/7*pi)/2*var.dance +clamp( if(!is_riding&&age>10,  (head.ry-var.y) +(rot_y-var.z), 0), -pi/4, pi/4)",
					"right_ear2.ry": "torad(8)",
					"left_ear2.ry": "-torad(8)",
					"right_ear2.rz": "clamp(torad( 20) +cos(var.b)/16 -sin(var.ls*2)/5*limb_speed +if(limb_speed>=0.6, -sin(var.ls)/4*limb_speed, 0) +sin(pi*swing_progress*2)*if(var.melee_r==1||var.melee_l==1, 1, 0.5) -cos(torad(45)+time/7*pi)/2*var.dance +clamp( if(!is_riding&&age>10, -(head.ry-var.y) -(rot_y-var.z)/1.5, 0) +if(age>10&&var.y!=pos_y, -(pos_y-var.x)*2, 0), -torad(17), pi/2), 0,  pi)",
					"left_ear2.rz": " clamp(torad(-20) -cos(var.b)/16 +sin(var.ls*2)/5*limb_speed +if(limb_speed>=0.6, -sin(var.ls)/4*limb_speed, 0) -sin(pi*swing_progress*2)*if(var.melee_r==1||var.melee_l==1, 1, 0.5) -cos(torad(45)+time/7*pi)/2*var.dance +clamp( if(!is_riding&&age>10, -(head.ry-var.y) -(rot_y-var.z)/1.5, 0) +if(age>10&&var.y!=pos_y,  (pos_y-var.x)*2, 0), -pi/2, torad(17)), -pi, 0)",
					"right_eye.sx": "1+clamp((1.5 -abs(sin(var.r+age/7)*6))*clamp(-32 +cos((var.r+age/7)/1.5)*40 +cos((var.r+age/7)/4)*40, 0, 1), 0, 1)/4",
					"left_eye.sx": "right_eye.sx",
					"right_eye.sy": "1-clamp((1.5 -abs(sin(var.r+age/7)*6))*clamp(-32 +cos((var.r+age/7)/1.5)*40 +cos((var.r+age/7)/4)*40, 0, 1), 0, 1)/1.1/2",
					"left_eye.sy": "right_eye.sy",
					"right_eye.sz": "if(between(player_pos_x-pos_x, -30, 30)&&between(player_pos_y-pos_y, -30, 30)&&between(player_pos_z-pos_z, -30, 30), 1, 2.5)",
					"left_eye.sz": "right_eye.sz",
					"right_eyelid.tz": "0",
					"left_eyelid.tz": "0",
					"right_blink.sy": "clamp((1.5 -abs(sin(var.r+age/7)*6))*clamp(-32 +cos((var.r+age/7)/1.5)*40 +cos((var.r+age/7)/4)*40, 0, 1), 0, 1)",
					"left_blink.sy": " clamp((1.5 -abs(sin(var.r+age/7)*6))*clamp(-32 +cos((var.r+age/7)/1.5)*40 +cos((var.r+age/7)/4)*40, 0, 1), 0, 1)",
					"right_eyelid.sz": "if(right_eyelid.sy==0||right_blink.sy==0, 0, 1)",
					"left_eyelid.sz": " if( left_eyelid.sy==0|| left_blink.sy==0, 0, 1)"
				},
				{
					"var.x": "var.x2",
					"var.x2": "var.x3",
					"var.x3": "var.x4",
					"var.x4": "var.x5",
					"var.x5": "pos_y",
					"var.y": "var.y2",
					"var.y2": "var.y3",
					"var.y3": "var.y4",
					"var.y4": "var.y5",
					"var.y5": "var.y6",
					"var.y6": "head.ry",
					"var.z": "var.z2",
					"var.z2": "var.z3",
					"var.z3": "var.z4",
					"var.z4": "var.z5",
					"var.z5": "var.z6",
					"var.z6": "rot_y"
				}
			]
		},
		{
			"part": "headwear",
			"id": "headwear",
			"invertAxis": "xy",
			"translate": [0, -24, 0.25],
			"submodels": [
				{
					"id": "head2",
					"invertAxis": "xy",
					"translate": [0, 24, 0],
					"submodels": [
						{
							"id": "left_ear2",
							"invertAxis": "xy",
							"translate": [-5, 3.5, -0.5],
							"rotate": [0, 0, 35],
							"submodels": [
								{
									"id": "left_ear3",
									"invertAxis": "xy",
									"translate": [0.5, -0.5, 0.5],
									"rotate": [0, 0, -35],
									"boxes": [
										{"coordinates": [-1.64715, -5.36169, -2, 2, 3, 2], "textureOffset": [0, 0], "sizeAdd": -0.25}
									],
									"submodels": [
										{
											"id": "left_ear_sub_0",
											"invertAxis": "xy",
											"mirrorTexture": "u",
											"translate": [2.77927, -27.54254, 0],
											"boxes": [
												{"coordinates": [-3.92642, 23.18085, -3, 2, 5, 6], "textureOffset": [16, 32]}
											]
										}
									]
								}
							]
						},
						{
							"id": "right_ear2",
							"invertAxis": "xy",
							"translate": [5, 2.5, -0.5],
							"rotate": [0, 0, -35],
							"submodels": [
								{
									"id": "right_ear3",
									"invertAxis": "xy",
									"translate": [-0.5, 3.5, 0.5],
									"rotate": [0, 0, 35],
									"boxes": [
										{"coordinates": [-2.57358, -6.81915, -3, 2, 5, 6], "textureOffset": [16, 32]}
									]
								}
							]
						},
						{
							"id": "nose",
							"invertAxis": "xy",
							"translate": [0, 2, -4],
							"boxes": [
								{"coordinates": [-2, -5, -3, 4, 4, 3], "textureOffset": [32, 32]},
								{"coordinates": [2, -5, -3, 1, 1, 1], "textureOffset": [4, 5]},
								{"coordinates": [3, -5, -3, 1, 2, 1], "textureOffset": [0, 5]}
							],
							"submodels": [
								{
									"id": "head_sub_0",
									"invertAxis": "xy",
									"mirrorTexture": "u",
									"translate": [0, -26, 4],
									"boxes": [
										{"coordinates": [-4, 21, -7, 1, 2, 1], "textureOffset": [0, 5]},
										{"coordinates": [-3, 21, -7, 1, 1, 1], "textureOffset": [4, 5]}
									]
								}
							]
						},
						{
							"id": "left_eye",
							"invertAxis": "xy",
							"translate": [-2.25, 4.25, -4],
							"boxes": [
								{
									"coordinates": [-1.75, -4.25, -0.03, 1, 1, 0.25],
									"uvNorth": [0, 6, 1, 7],
									"uvEast": [18, 17, 19, 18],
									"uvSouth": [18, 17, 19, 18],
									"uvWest": [18, 17, 19, 18],
									"uvUp": [18, 17, 19, 18],
									"uvDown": [18, 17, 19, 18]
								}
							],
							"submodels": [
								{
									"id": "left_eyelid",
									"invertAxis": "xy",
									"mirrorTexture": "u",
									"translate": [0.25, -0.25, 1],
									"submodels": [
										{
											"id": "left_blink",
											"invertAxis": "xy",
											"translate": [0, 1.015, 0]
										}
									]
								}
							]
						},
						{
							"id": "right_eye",
							"invertAxis": "xy",
							"translate": [2.25, 4.25, -4],
							"boxes": [
								{
									"coordinates": [0.75, -4.25, -0.03, 1, 1, 0.25],
									"uvNorth": [0, 6, 1, 7],
									"uvEast": [13, 17, 14, 18],
									"uvSouth": [13, 17, 14, 18],
									"uvWest": [13, 17, 14, 18],
									"uvUp": [13, 17, 14, 18],
									"uvDown": [13, 17, 14, 18]
								}
							],
							"submodels": [
								{
									"id": "right_eyelid",
									"invertAxis": "xy",
									"mirrorTexture": "u",
									"translate": [-0.25, -0.25, 1],
									"submodels": [
										{
											"id": "right_blink",
											"invertAxis": "xy",
											"translate": [0, 1.015, 0]
										}
									]
								}
							]
						},
						{
							"id": "head3",
							"invertAxis": "xy",
							"translate": [0, 0, 0],
							"boxes": [
								{"coordinates": [-5, -3, -4, 10, 8, 8], "textureOffset": [0, 0]},
								{"coordinates": [-5, 1, -5, 10, 2, 1], "textureOffset": [28, 0]}
							]
						}
					]
				}
			]
		},
		{
			"part": "body",
			"id": "body",
			"invertAxis": "xy",
			"translate": [0, -24, 0],
			"submodels": [
				{
					"id": "jacket2",
					"invertAxis": "xy",
					"translate": [0, 24, 0]
				}
			],
			"boxes": [
				{"coordinates": [-4, 11, -2, 8, 10, 4], "textureOffset": [0, 17]}
			]
		},
		{
			"part": "left_arm",
			"id": "left_arm",
			"invertAxis": "xy",
			"mirrorTexture": "u",
			"translate": [5, -22, 0],
			"boxes": [
				{"coordinates": [-8, 11, -2, 4, 10, 4], "textureOffset": [24, 16]}
			]
		},
		{
			"part": "right_arm",
			"id": "right_arm",
			"invertAxis": "xy",
			"translate": [-5, -22, 0],
			"boxes": [
				{"coordinates": [4, 11, -2, 4, 10, 4], "textureOffset": [24, 16]}
			]
		},
		{
			"part": "left_leg",
			"id": "left_leg",
			"invertAxis": "xy",
			"mirrorTexture": "u",
			"translate": [2, -12, 0],
			"boxes": [
				{"coordinates": [-4, 0, -2, 4, 11, 4], "textureOffset": [0, 32]}
			]
		},
		{
			"part": "right_leg",
			"id": "right_leg",
			"invertAxis": "xy",
			"translate": [-2, -12, 0],
			"boxes": [
				{"coordinates": [0, 0, -2, 4, 11, 4], "textureOffset": [0, 32]}
			]
		},
		{
			"part": "left_ear",
			"id": "left_ear",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "right_ear",
			"id": "right_ear",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "jacket",
			"id": "jacket",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "left_sleeve",
			"id": "left_sleeve",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "right_sleeve",
			"id": "right_sleeve",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "left_pants",
			"id": "left_pants",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "right_pants",
			"id": "right_pants",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "headwear",
			"id": "headwear",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "body",
			"id": "body",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "left_arm",
			"id": "left_arm",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "right_arm",
			"id": "right_arm",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "left_leg",
			"id": "left_leg",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "right_leg",
			"id": "right_leg",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		}
	]
}